; Program template for the LDOI Mark II processor
; All numbers are hexadecimal
; Register use:
;   R0: 
;   R1:
;   R2:
;   R3: S
;   R4: M0
;   R5: M1
;   R6: H0
;   R7: H1
; Address space:
;   RAM    : 80 - 9F
;   IRQE   : C0
;   IRQF   : C1
;   TRM1S  : D8
;   SW_H   : E1
;   SW_L   : E0
;   BTNS   : E8
;   LEDS_H : F1
;   LEDS_L : F0
;   BCD3   : FB
;   BCD2   : FA
;   BCD1   : F9
;   BCD0   : F8
; The assembler is not case-sensitive!

; You can also use this syntax to define symbol names
#define S       R3    ; register R3 used for storing 'seconds' value
#define IRQF    C1    ; IRQF points to address C1 (interrupt flags I/O register)
#define BCD3    FB    ; BCD3 points to address FB

reset: ; a label
	jump setup
	
isr:
	; check irq flags
	ldr  R0, IRQF
	andl R0, 04 ; mask tmr irq
	call inc_s  ; tmr flag was set
	reti
	
setup:
	; enable btn en tmr irq
	movl R0, 05
	str  C0, R0
	; enable timer
	movl R0, 01
	str  D8, R0
	
loop:	; continuously update 7 segment
	; extra 4 segmenten FF, FE, FD, FC
	str  FF, R7
	str  FE, R6
	str  FD, R5
	str  FC, R4
	str  BCD3, R7
	str  FA, R6
	str  F9, R5
	str  F8, R4
	jmp loop

; set time subroutine
set_time:
	movl R4, 00
	movl R5, 00
	movl R7, 00
	movl R6, 00
	retc

; inc seconds subroutine
inc_s:
	; toggle led
	movl R0, 00
	str  F0, R0
	str  F1, R0
	addl R4, 01 ; increment R4 (seconds least-significant digit)
	cmpl R4, 0A ; check if R4 = 10
	je   m0_overflow
	retc		; no overflow
m0_overflow:
	movl R4, 00	; reset LS digit
	addl R5, 01 ; increment R5 (MS digit)
	cmpl R5, 06 ; check if R5 = 6
	je   m1_overflow
	retc        ; no overflow
m1_overflow:
	movl R5, 00 ; reset MS digit
	call inc_mm
	retc		; end of subroutine
	
; inc minutes subroutine
inc_mm:
	addl R6, 01 ; increment R6 (minutes LS digit)
	cmpl R6, 0A ; check if R6 = 10
	je   h0_overflow
	retc		; end of subroutine
h0_overflow: 
	movl R6, 00 ; reset LS digit
	; toggle led
	movl R0, FF
	str  F0, R0
	str  F1, R0
	retc		; end of subroutine
h1_overflow:
	movl R6, 00 ; reset LSB
	movl R7, 00 ; reset MSB
	retc		; end of subroutine
	; end of program
